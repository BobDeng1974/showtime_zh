#define ListItemBevel() {
  widget(container_y, {

    style: "ListItemBevel";

    filterConstraintY: true;
    filterConstraintX: true;
    widget(quad, {
      height: 1;
      alpha: 0.15;
    });
    space(1);
    widget(quad, {
      height: 1;
      color: 0;
      alpha: 0.15;
    });
  });
}


#define GridItemBevel() {
  widget(container_y, {

    style: "GridItemBevel";

    filterConstraintY: true;
    widget(quad, {
      height: 1;
      alpha: 0.15;
    });
    space(1);
    widget(quad, {
      height: 1;
      color: 0;
      alpha: 0.15;
    });
  });
  widget(container_x, {

    style: "GridItemBevel";

    filterConstraintX: true;
    widget(quad, {
      width: 1;
      alpha: 0.15;
    });
    space(1);
    widget(quad, {
      width: 1;
      color: 0;
      alpha: 0.15;
    });
  });
}


#define ListItemHighlight() {
  widget(quad, {
    fhpSpill: true;
    additive: true;
    alpha: 0.1 * isHovered() + 0.2 * isNavFocused();
  });

}

#define GridItemHighlight() {
  widget(quad, {
    fhpSpill: true;
    additive: true;
    alpha: 0.1 * isHovered() + 0.2 * iir(isNavFocused(), 4, true);
  });
}


#define GridItemHighlight2() {
  widget(quad, {
    fhpSpill: true;
    additive: true;
    alpha: 0.1 * isHovered() + 0.2 * isNavFocused();
  });
  widget(container_x, {
    filterConstraintX: true;
    fhpSpill: true;
    alpha: isHovered() * 0.5;
    widget(quad, {
      width: 1;
      color: 0;
    });
    space(1);
    widget(quad, {
      width: 1;
      color: 0;
    });
  });
}


#define ScrollBar(TARGET, TOP_PAD = 0, BOTTOM_PAD = 0) {

  widget(container_x, {
    filterConstraintX: true;
    filterConstraintY: true;
    padding: [0,TOP_PAD,0,BOTTOM_PAD];

    space(1);
    widget(slider_y, {
      id: "scrollbar";
      bind(TARGET);
      width: 0.6em;
      focusable: canScroll();
      alpha: iir(canScroll(), 16);
      widget(container_x, {
        padding: [0.2em,0,0.2em, 0];
        widget(quad, {
	  alpha: 0.6 + isHovered();
        });
      });
    });
  });
}


#define BackButton(ENABLED=true) {
  widget(container_y, {
    align: center;
    width: 4em;
    clickable: $ui.pointerVisible || ($ui.touch && ENABLED);
    alpha: iir($ui.pointerVisible || ($ui.touch && ENABLED), 4);
    onEvent(activate, event("back"));
    navFocusable: false;
    widget(icon, {
      color: 0.5 + iir(isHovered(), 4);
      size: 2em;
      source: "skin://icons/ic_chevron_left_48px.svg";
    });
  });
}

#define PageHeader(TITLE) {
  widget(container_z, {
    height: 3em;
    zoffset: 10;
    widget(quad, {
      color: 0;
      alpha: 0.2;
    });

    widget(container_x, {
      BackButton();

      widget(deck, {
        filterConstraintX: true;
        widget(label, {
          padding: [4em, 0];
          align: center;
          caption: TITLE;
          size: 1.5em;
        });

        widget(image, {
          source: $self.model.metadata.icon;
        });
        page: select(isVoid($self.model.metadata.icon), 0, 1);
      });

      widget(dummy, {
        width: 4em;
      });
    });

    widget(label, {
//      size: 1.5em;
      align: right;
      padding: [4em, 0];
      caption: $core.clock.localtimeofday;
    });
  });
}
