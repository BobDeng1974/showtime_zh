setDefaultFont("skin://fonts/RobotoCondensed-Regular.ttf");

$ui.sizeOffset = 4;
$ui.xmargin = select($ui.aspect > 1, $ui.width / 50, 0);
$ui.showTopIcons = $ui.pointerVisible || $ui.touch;
$ui.showAllPlaydeckButtons = 0;

onEvent(sysinfo, {
  toggle($ui.sysinfo);
});

onEvent(mediastats, {
  toggle($ui.mediainfo);
});

onEvent(logwindow, {
  toggle($ui.logwindow);
});

onEvent(back, {
  $ui.logwindow = false;
}, $ui.logwindow);


$view.orientation = select($ui.aspect > 1, "landscape", "portrait");

style(PageContainer, {
  alpha: 1 - iir(clamp(getLayer(), 0, 1), 4) * 0.9;
});

widget(container_z, {

  widget(loader, {
    source: "background.view";
  });

  widget(loader, {
    zoffset: -999;
    alpha: iir($nav.currentpage.model.loading, 8);
    source: selectedElement(vectorize($core.glw.views.standard.loading))
      ?? "loading.view";
  });

  widget(underscan, {
    widget(container_z, {

      widget(layer, {
        filterConstraintY: true;
	alpha: iir(1 - $ui.screensaverActive, 8);
        widget(playfield, {
          effect: blend;
          noInitialTransform: true;
          alpha: 1 - iir(clamp(getLayer(), 0, 1), 7) * 0.66;

          cloner($nav.pages, container_z, {

            widget(loader, {
	      noInitialTransform: true;
	      source: "skin://pages/" + $self.model.type + ".view";
            });

          });
        });
	cloner($core.popups, loader, {
	  source: "popups/" + $self.type + ".view";
	});

	widget(loader, {
          autohide: true;
	  source: select($ui.logwindow, "log.view", "");
	});

        widget(loader, {
          autohide: true;
	  source: select($ui.osk.show, "osk.view", "");
	});

      });

      widget(container_y, {
        space(1);
        widget(container_y, {
          $ui.universeBottomHeight = getHeight();

          expediteSubscriptions: true;

          style(playdeckText, {
            font: "skin://fonts/RobotoCondensed-Regular.ttf";
          });

          widget(loader, {
            autohide: true;
            source: translate($core.media.current.type, "",
                              "tracks", "playdecks/" + $view.orientation + "/tracks.view",
                              "radio",  "playdecks/" + $view.orientation + "/radio.view"
                             );
          });

          cloner($core.notifications.nodes, container_z, {
            widget(quad, {
              color: 0;
              alpha: 0.2;
            });

            widget(label, {
              padding: [2em, 0.5em];
              caption: $self.text;
            });
          });

          widget(dummy, {
            height: 0;
          });
        });
      });



      widget(container_y, {
        hidden: $ui.fullwindow && !$ui.pointerVisible;
        alpha: iir($ui.showTopIcons, 4);

        widget(container_x, {
          height: 3em;
          widget(container_y, {
            align: center;
            width: 4em;
            clickable: $nav.canGoBack || $ui.logwindow;
            alpha: iir($nav.canGoBack || $ui.logwindow, 4);
            onEvent(activate, deliverEvent($ui.eventSink, "back"));
            navFocusable: false;
            widget(icon, {
              color: 0.5 + iir(isHovered(), 4);
              size: 2em;
              source: "skin://icons/ic_chevron_left_48px.svg";
            });
          });
          space(1);
        });
      });

      widget(container_z, {

        hidden: !changed($ui.underscan_changes, 5, true);

        widget(linebox, {});
        widget(container_z, {

          widget(container_x, {
            widget(icon, {
              source: "skin://icons/ic_chevron_left_48px.svg";
              size: 5em;
              align: left;
            });
            space(1);
            widget(icon, {
              source: "skin://icons/ic_chevron_right_48px.svg";
              size: 5em;
              align: right;
            });
          });

          widget(container_y, {
            widget(icon, {
              source: "skin://icons/ic_expand_less_48px.svg";
              size: 5em;
              align: top;
            });
            space(1);
            widget(icon, {
              source: "skin://icons/ic_expand_more_48px.svg";
              size: 5em;
              align: bottom;
            });

          });

          widget(container_y, {
            space(4);
            widget(container_x, {
              space(0.3);
              widget(container_z, {
                widget(quad, {
                  color: 0;
                  alpha: 0.8;
                });
                widget(label, {
                  padding: 0.5em;
                  align: center;
                  maxlines:2;
                  caption: _("Overscan adjustment\nPosition border at screen edges");
                });
              });
              space(0.3);
            });
            space(1);
          });
        });
      });
    });
  });

  widget(container_y, {

    align: bottom;
    spacing: 0.1em;
    padding: [0,1em];

    widget(container_z, {
      height: 1.3em;

      widget(container_x, {
        alpha: iir($core.audio.mastermute, 7);

        padding: [2em, 0];

        widget(container_z, {
          widget(quad, {
            color: 0;
            alpha: 0.8;
          });
          widget(label, {
            padding: [1em, 0];
            caption: _("Audio muted");
            align: center;
          });
        });
      });

      widget(container_x, {
        alpha: iir(changed($core.audio.mastervolume, 2, true), 7);
        align: center;
        widget(container_z, {
          width: $ui.width / 2;

          widget(quad, {
            color: 0;
            alpha: 0.8;
          });

          widget(container_x, {
            padding: 0.1em;
            weight: 0.87;
            widget(bar, {
              color1: [0.3, 0.3, 0.3];
              color2: [0.7, 0.8, 0.5];
              fill: ($core.audio.mastervolume + 75) / 75;
            });

            widget(bar, {
              weight: 0.13;
              color1: [0.7, 0.8, 0.5];
              color2: [1.0, 0.8, 0.6];
              fill: $core.audio.mastervolume / 12;
            });
          });

          widget(label, {
            caption: fmt(_("Master volume: %d dB"), $core.audio.mastervolume);
            align: center;
          });
        });
      });
    });
  });

  widget(underscan, {

    widget(container_y, {
      spacing: 0.5em;

      widget(loader, {
        time: 0.1;
        effect: blend;
        autohide: true;
        source: select($ui.mediainfo, "mediainfo.view", "");
      });

      widget(loader, {
        time: 0.1;
        effect: blend;
        autohide: true;
        source: select($ui.sysinfo, "sysinfo.view", "");
      });

    });
  });
});
