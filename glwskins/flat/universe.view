setDefaultFont("skin://fonts/RobotoCondensed-Regular.ttf");

$ui.sizeOffset = 4;
$ui.xmargin = select($ui.aspect > 1, $ui.width / 50, 0);


onEvent(sysinfo, {
  toggle($ui.sysinfo);
});

onEvent(logwindow, {
  toggle($ui.logwindow);
});

onEvent(back, {
  $ui.logwindow = false;
}, $ui.logwindow);



style(PageContainer, {
  alpha: 1 - iir(clamp(getLayer(), 0, 1), 4) * 0.9;
});

widget(container_z, {
  widget(backdrop, {
    zoffset: -1000;

    source: "pixmap:gradient:40,40,40:80,80,80";
//    source: "http://image.tmdb.org/t/p/original/jz1eErpJSx7ToDVDgV9HKFv4hAa.jpg";
//    source: "http://image.tmdb.org/t/p/original/xyhrCEdB4XRkelfVsqXeUZ6rLHi.jpg";
//    color: 0.3;
    alpha: iir(1 - $ui.fullwindow, 4);
  });

  widget(underscan, {
    widget(container_z, {

      widget(container_y, {

        widget(layer, {
          filterConstraintY: true;
	  alpha: iir(1 - $ui.screensaverActive, 8);
          widget(playfield, {
            effect: blend;
            noInitialTransform: true;

            $view.currentPageClone <- focusedClone();

            cloner($nav.pages, container_z, {

              widget(loader, {
	        time: 0.05;
                effect: flipVertical;
	        noInitialTransform: true;
	        source: "skin://pages/" + $self.model.type + ".view";
              });

            });
          });
	  cloner($core.popups, loader, {
	    source: "popups/" + $self.type + ".view";
	  });

	  widget(loader, {
            autohide: true;
	    source: select($ui.logwindow, "log.view", "");
	  });
        });

        widget(container_y, {
          autofade: true;
          expediteSubscriptions: true;

          style(playdeckText, {
            font: "skin://fonts/RobotoCondensed-Regular.ttf";
          });

          widget(loader, {
            autohide: true;
            source: translate($core.media.current.type, "",
                              "tracks", "playdecks/tracks.view");
          });

          cloner($core.notifications.nodes, container_z, {
            widget(quad, {
              color: 0;
              alpha: 0.8;
            });

            widget(label, {
              padding: [2em, 0.5em];
              caption: $self.text;
            });
          });

          widget(dummy, {
            height: 0;
          });
        });
      });



      widget(container_y, {

        alpha: iir($ui.pointerVisible, 4);
        widget(container_x, {

          height: 3em;
          widget(container_y, {
            width: 4em;
            padding:[0, 0.5em];
            widget(icon, {
              clickable: $nav.canGoBack;
              alpha: iir($nav.canGoBack, 4);
              onEvent(activate, deliverEvent($ui.eventSink, "back"));
              navFocusable: false;
              color: 0.5 + iir(isHovered(), 4);
              size: 2em;
              source: "skin://icons/ic_chevron_left_48px.svg";
            });
          });
          space(1);
          widget(container_y, {
            width: 4em;
            padding:[0, 0.5em];

            widget(icon, {
              angle: iir($view.currentPageClone.showSidebar, 4) * -90;

              clickable: $view.currentPageClone.haveSidebar;
              alpha: iir($view.currentPageClone.haveSidebar, 4);

              onEvent(activate, {
                $view.currentPageClone.showSidebar = !$view.currentPageClone.showSidebar;
              });

              size: 2em;
              navFocusable: false;
              color: 0.5 + iir(isHovered(), 4);
              source: "skin://icons/ic_menu_48px.svg";
            });
          });
        });
      });
    });
  });

  widget(container_y, {

    align: bottom;
    spacing: 0.1em;
    padding: [0,1em];

    widget(container_z, {
      height: 1.3em;

      widget(container_x, {
        alpha: iir($core.audio.mastermute, 7);

        padding: [2em, 0];

        widget(container_z, {
          widget(quad, {
            color: 0;
            alpha: 0.8;
          });
          widget(label, {
            padding: [1em, 0];
            caption: _("Audio muted");
            align: center;
          });
        });
      });

      widget(container_x, {
        alpha: iir(changed($core.audio.mastervolume, 2, true), 7);
        align: center;
        widget(container_z, {
          width: $ui.width / 2;

          widget(quad, {
            color: 0;
            alpha: 0.8;
          });

          widget(container_x, {
            padding: 0.1em;
            weight: 0.87;
            widget(bar, {
              color1: [0.3, 0.3, 0.3];
              color2: [0.7, 0.8, 0.5];
              fill: ($core.audio.mastervolume + 75) / 75;
            });

            widget(bar, {
              weight: 0.13;
              color1: [0.7, 0.8, 0.5];
              color2: [1.0, 0.8, 0.6];
              fill: $core.audio.mastervolume / 12;
            });
          });

          widget(label, {
            caption: fmt(_("Master volume: %d dB"), $core.audio.mastervolume);
            align: center;
          });
        });
      });
    });
  });

  widget(underscan, {
#import "sysinfo.view"
  });
});
