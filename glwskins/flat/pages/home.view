#include "skin://theme.view"

style(sidebarBackdrop, {
  color: 0;
  alpha: 0.3;
});

#define SEARCHBAR() {
  widget(container_x, {
    spacing: 1em;
    divider: true;
    padding: [0, 1em, 2em, 0];
    widget(container_z, {

      filterConstraintX: true;
      widget(quad, {
        fhpSpill: true;
        zoffset: -400;
        color: 0;
      });

      widget(container_x, {
        height: 2em;
        padding: [0.5em, 0];
        spacing: 0.5em;
        widget(icon, {
          fhpSpill: true;
          size: 1.2em;
          source: "skin://icons/ic_search_48px.svg";
          alpha: 0.4 + isFocused();
        });

        widget(text, {
          padding: [0, 0.5em];
          style: "ListItemValue";
          size: 1.2em;
          font: "skin://fonts/RobotoCondensed-Regular.ttf";
          focusable: 0.1;

          bind($view.searchQuery);
          onEvent(enter, navOpen("search:" + $view.searchQuery),
	          $view.searchQuery);
          onEvent(submit, navOpen("search:" + $view.searchQuery),
	          $view.searchQuery);
        });
      });
    });

    widget(label, {
      align: topRight;
//      padding: [2em, 0];
      caption: $core.clock.localtimeofday;
    });
  });
}


#define NEWSSTAND() {
  cloner($core.news, container_x, {
    height: 2em;
    divider: true;
    spacing: 1em;
    padding: [2em, 0em];

    widget(icon, {
      source: "skin://icons/ic_info_outline_48px.svg";
    });

    widget(label, {
      caption: $self.message;
    });

    space(1);

    widget(container_z, {
      onEvent(activate, select(isVoid($self.location),
                               deliverEvent($self.eventSink, $self.action),
                               navOpen($self.location)));
      focusable: 0.1;
      GridItemHighlight();

      widget(label, {
        padding: [1em, 0];
        caption: $self.caption;
        color: iir(!isNavFocused(), 4);
      });
    });

    widget(container_z, {
      onEvent(activate, deliverEvent($self.eventSink, "dismiss"));
      focusable: 0.05;

      focusable: 0.1;
      GridItemHighlight();

      widget(label, {
        padding: [1em, 0];
        caption: _("Dismiss");
        color: iir(!isNavFocused(), 4);
      });
    });
  });
}


onEvent(menu, { toggle($clone.showSidebar); });

widget(container_z, {

  widget(layer, {

    onEvent(right, {
      $clone.showSidebar = true;
    }, true, false);

    widget(clip, {

      rightPx: select($clone.showSidebar, 22em, 0);
      blurOutside: 1;
      alphaOutside: 0.05;

      widget(container_z, {
        widget(array, {
          id: "main";

          scrollThresholdBottom: $ui.universeBottomHeight;
          clipOffsetBottom: $ui.universeBottomHeight;
          clipAlpha: 0.2;
          clipBlur: 1;

          alpha: iir(select($clone.showSidebar, 0.3, 1), 4);

          margin: [$ui.xmargin, 0em];
          childTilesX: select($ui.aspect > 1, 5, 2);
          childTilesY: 4;

          NEWSSTAND();
          SEARCHBAR();

          cloner($core.services.stable, container_z, {

            focusable: true;
            GridItemHighlight();
            onEvent(activate, navOpen($self.url, void, $self));

            widget(container_y, {

              spacing: 0.5em;
              padding: 0.5em;

              widget(displacement, {
                scaling: [1,1,1] - [0.11,0.1,0] * iir(isPressed(), 4, true)
                widget(image, {
                  source: $self.icon ??
	            "skin://icons/" +
	            translate($self.type, "ic_folder_48px",
		              "tv",       "ic_tv_48px",
		              "usb",      "ic_usb_48px",
		              "cd",       "ic_album_48px",
		              "dvd",      "ic_album_48px",
		              "bluray",   "ic_album_48px",
		              "network",  "ic_device_hub_24px",
		              "setting",  "ic_settings_48px",
                              "storage",  "ic_sd_storage_48px",
		              "plugin",   "ic_extension_48px") + ".svg";

                  color:  select($self.icon, 1, iir(!isNavFocused(), 4));
                  saturation: iir(isPressed(), 4, true) * 0.66;
                });
              });

              widget(label, {
                align: center;
                caption: $self.title;
                size: 1.2em;
                color: iir(!isNavFocused(), 4) - 0.5 * iir(isPressed(), 4, true);
              });
            });
          });
        });
      });
    });
    widget(loader, {
      hidden: !$clone.showSidebar;
      filterConstraintX: true;
      time: 0.05;
      source: "skin://menu/sidebar.view";
    });
  });

  widget(container_y, {

    alpha: iir($ui.showTopIcons, 4);

    widget(container_x, {
      space(1);
      height: 3em;
      widget(container_y, {
        align: center;
        width: 4em;
        clickable: true;
        onEvent(activate, {
          toggle($clone.showSidebar);
        });
        navFocusable: false;
        widget(icon, {
          angle: iir($clone.showSidebar, 4) * -90;
          color: 0.5 + iir(isHovered(), 4);
          size: 2em;
          source: "skin://icons/ic_menu_48px.svg";
        });
      });
    });
  });

});
