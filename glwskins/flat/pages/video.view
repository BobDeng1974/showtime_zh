#import "skin://styles/style_list.view"

style(OsdItem, {
  filterConstraintX: true;
  color: iir(!isNavFocused(), 4);
  shadow: iir(!isNavFocused(), 4);
});


delta($ui.fullwindow, isVisible());

$self.directClose = 1;
$self.close = $self.media.playstatus == "stop";
$clone.osdpage = 0;

onEvent(back, {
  $clone.osdpage = translate($clone.osdpage, 1
                             , 1, 0  // Main -> No OSD
                             , 6, 3
                             , 7, 4
                             );
}, $clone.osdpage);


onEvent(MediaStats, {
  $clone.osdpage = select($clone.osdpage == 2, 0, 2);
});

widget(container_z, {

  // --------------------------------------------
  // --- Primary video display
  // --------------------------------------------

  widget(video, {
    zoffset: -500;
    how: $self.how;
    model: $self.openedFrom;
    parentUrl: $self.parentUrl;
    origin: $self.origin;
    primary: true;
    source: $self.source;
    focusable: 0.1;

    onEvent(left,  deliverEvent($self.media.eventSink, "SeekReverse"));
    onEvent(right, deliverEvent($self.media.eventSink, "SeekForward"));

    onEvent(up,    deliverEvent($self.media.eventSink, "VolumeUp"));
    onEvent(down,  deliverEvent($self.media.eventSink, "VolumeDown"));

    onEvent(activate, {
      toggle($clone.osdpage);
    });
  });


  widget(container_y, {

    padding: [4em, 1em];

    alpha: iir(translate($clone.osdpage, 0,
                         0, $ui.pointerVisible || changed($self.media.seektime, 5, true),
                         1, 1), 4);

    widget(label, {
      caption: $self.media.metadata.title;
    });

    widget(container_x, {
      height: 8em;

      filterConstraintX: true;
      spacing: 1em;
      widget(container_y, {
        width: 10em;

        widget(image, {
          align: topLeft;
          height: 6em;
          source: $self.media.metadata.icon;
        });
      });


      widget(container_y, {
        filterConstraintX: true;
        spacing: 3;

        widget(container_x, {
          spacing: 0.5em;

          widget(label, {
            width: 3em;
            caption: value2duration($self.media.currenttime);
            shadow: true;
            align: right;
          });

          widget(container_z, {

            widget(container_y, {
              align: center;
              widget(container_z, {
                height: 3;
                widget(container_y, {
                  padding: 1;
                  widget(quad, {
                    alpha: 0.3;
                    additive: true;
                  });
                });
              });
            });

            widget(slider_x, {
              focusable: 0.1;
              bind($self.media.currenttime);
              max: $self.media.metadata.duration;
              widget(icon, {
                source: "skin://icons/dot.png";
              });
              widget(container_y, {
                space(1);
                widget(quad, {
                  height: 3;
                  alpha: 0.9;
                  additive: true;
                });
                space(1);
              });
            });
          });
          widget(label, {
            width: 4em;
            shadow: true;
            caption: value2duration($self.media.metadata.duration);

          });
        });
      });
    });
    space(1);
  });

  widget(container_y, {

    widget(loader, {

      source: translate($clone.osdpage,
                        select($ui.pointerVisible,
                               "skin://osd/osd_main.view",
                               ""),
                        1, "skin://osd/osd_main.view",
                        2, "skin://osd/osd_info.view",
                        3, "skin://osd/osd_settings_subs.view",
                        4, "skin://osd/osd_settings_audio.view",
                        5, "skin://osd/osd_settings_video.view",
                        6, "skin://osd/osd_subs.view",
                        7, "skin://osd/osd_audio.view");
    });
    space(1);
  });
});
