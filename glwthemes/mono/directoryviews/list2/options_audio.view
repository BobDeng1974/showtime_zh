
#define OPTION(CAPTION, ICON, EVENT, HIDDEN=false) {
  widget(container_x, {
    .hidden = HIDDEN;
    .spacing = 5;
    widget(icon, {
      .source = ICON;
      .color = 0.5 + iir(isHovered() || isFocused(), 5);
    });
    widget(label, {
      .caption = CAPTION;
      .focusable = true;
      .color = 0.5 + iir(isHovered() || isFocused(), 5);
      onEvent(activate, EVENT);
    });
  });
}
  




widget(backdrop, {
  .width = $ui.size * 5;
  .source = "theme://graphics/8x8round.png";
  .border = 3;
  .padding = -3;
  .color = 0;
  
  .alphaSelf = 0.2 + 0.4 * (isHovered() || isFocused());

  widget(backdrop, {
    .source = "theme://graphics/8x8round-open.png";
    .borderOnly = true;
    .border = 3;
    .color = [0.9, 0.9, 1.0];
    .padding = [3,0];
    .alphaSelf = iir(isFocused() * 0.5, 10);

    widget(list_y, {

      OPTION(_("Queue"), "theme://svg/Enqueue.svg", {
	  fireEvent(enqueuetrack($self));
      });

      OPTION(_("Delete"), "theme://svg/Delete.svg", {
	delete($self);
      }, !$parent.model.canDelete);

      OPTION(select($self.metadata.starred, _("Unstar"), _("Star")),
	     select($self.metadata.starred,
		    "theme://svg/Star.svg",
		    "theme://svg/Nostar.svg"),
	     deliverEvent($self, "starToggle"),
	     isVoid($self.metadata.starred));
    });
  });
});
