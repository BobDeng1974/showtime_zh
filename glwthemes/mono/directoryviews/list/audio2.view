#import "theme://include/buttons.view"
#import "theme://include/defs.view"

widget(container_x, {
  
  // Title
  widget(container_y, {
    .weight = 1.5;
    .filterConstraintX = true;

    widget(container_x, {
      
      widget(container_x, {
	.filterConstraintX = true;
	
	widget(deck, {
	  .effect = flipVertical;
	  .noInitialTransform = true;
	  .time = 0.2;
	  
	  ICON2("theme://icons/48x48/Pause.png",
		"Pause",
		event(Pause),
		PLATE_COLOR_AUDIO(),
		1);
	  
	  ICON2("theme://icons/48x48/Play.png",
		"Play",
		event(Play),
		PLATE_COLOR_AUDIO(),
		1);

	  ICON2("theme://icons/48x48/Play.png",
		"Play",
		playTrackFromSource($self, $parent.source),
		PLATE_COLOR_AUDIO(),
		1);
	  
	  .page = translate($self.media.playstatus, 
			    2,
			    "play",  0,
			    "pause", 1);
	});
	

	ICON2("theme://icons/48x48/Enqueue.png",
	      "Enqueue",
	      {
		fireEvent(enqueuetrack($self));
	      },
	      PLATE_COLOR_AUDIO(),
	      1);

	ICON2("theme://icons/48x48/Delete.png",
	      "Delete",
	      {
		delete($self);
	      },
	      PLATE_COLOR_AUDIO(),
	      1, !$parent.model.canDelete);
      });

      widget(container_x, {
	widget(label, {
	  .color = PLATE_COLOR_AUDIO();
	  .filterConstraintX = true;
	  .align = right;
	  .caption = 
	    select($self.playing,
		   value2duration($self.media.currenttime) + " / ",
		   "") + value2duration($self.metadata.duration);
	});
      });
    });
  });

  widget(dummy, {
    .width = $ui.fontsize / 2;
  });

  // Artist
  widget(container_y, {
    cloner($self.metadata.additional_artists, backdrop, {

      .focusable = 1.0;
      .focusOnClick = true;
      .filterConstraintX = true;
      onEvent(activate, navOpen($self.artist));
	
      .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
	
      .color = PLATE_COLOR_AUDIO();
      PLATE_GFX();
	
      widget(label, {
	.caption = $self.artist;
	.color = select(isFocused(), [1.0, 1.0, 1.0], PLATE_COLOR_AUDIO());
      });
    });
  });

  widget(dummy, {
    .width = $ui.fontsize / 2;
  });
  
  // Album
  widget(container_x, {
    .hidden = $args.hide_album;
    .filterConstraintX = true;
    .weight = 1.0;

    widget(dummy, {
      .width = 4;
    });

    widget(container_y, {
      widget(icon, {
	.align = left;
	.source = $self.metadata.album_art;
	.sizeScale = select($self.metadata.album_art, 4, 0);
      });
      
      widget(label, {
	.color = PLATE_COLOR_AUDIO();
	.sizeScale = select($self.metadata.album_year, 0.6, 0);
	.align = left;
	.caption = $self.metadata.album_year;
      });
    });
  });

});
