#import "skin://playdeck.skin"

$ui.showplaydeck =  $ui.menu ||
  $global.media.current.error ||
  $global.media.current.video.too_slow ||
  changed($global.media.current.audio.current, 2) ||
  changed($global.media.current.subtitle.current, 2) ||
  changed($global.media.current.metadata.title, 5) ||
  changed($global.media.current.seektime, 2, true);

// -------------------------------------------------------------------

widget(container_x, {
  .padding = [5, 0, 5, 5];
      
  .align = center;
  skinPlaydeckGroup(.filterConstraintX = true; widget(container_x, {
    .spacing = 10;
    widget(container_y, {
      .filterConstraintX = true;
      widget(label, {
	.sizeScale = 1.5;
	.caption = $global.media.current.metadata.title;
      });

      widget(container_x, {
	.hidden = select($global.media.current.error, false, true);
	widget(icon, {
	  .source = "skin://icons/Alert.png";
	});
	widget(label, {
	  .caption = $global.media.current.error;
	});
      });

      widget(container_x, {
	.hidden = select($global.media.current.video.too_slow, false, true);
	widget(icon, {
	  .source = "skin://icons/Alert.png";
	});
	widget(label, {
	  .caption = _("CPU is too slow to decode this video");
	});
      });


      widget(container_x, {
	.spacing = 10;
	.hidden = !changed($global.media.current.audio.current, 5);
	widget(icon, {
	  .source = "skin://icons/Sound.png";
	});
	widget(deck, {
	  .effect = flipHorizontal;
	  .time = 0.1;
	  cloner($global.media.current.metadata.audiostreams, label, {
	    .caption = join(" - ", $self.title, $self.language, $self.source, $self.longformat ?? $self.format);
	  });
	});
      });

      widget(container_x, {
	.spacing = 10;
	.hidden = !changed($global.media.current.subtitle.current, 5);
	widget(icon, {
	  .source = "skin://icons/Script.png";
	});
	widget(deck, {
	  .effect = flipHorizontal;
	  .time = 0.1;
	  cloner($global.media.current.metadata.subtitlestreams, label, {
	    .caption = join(" - ", $self.title, $self.language, $self.source, $self.format);
	  });
	});
      });
    });

    widget(container_y, {
      .align = bottom;

      widget(label, {
	.align = right;
	.caption = value2duration(ignoreTentative($global.media.current.currenttime)) + 
	  select($global.media.current.metadata.duration,
		 " / " + value2duration($global.media.current.metadata.duration), "");
      });
    });
  }));
});
