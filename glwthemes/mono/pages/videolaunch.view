#import "theme://include/separators.view"
#import "theme://include/buttons.view"


#define RATINGSTAR(LIMIT)
{
  widget(icon, {
    .color = select($page.model.metadata.rating > LIMIT,
		    [1,1,0], [0.5, 0.5, 0]);
    .source = select($page.model.metadata.rating > LIMIT,
		     "skin://icons/Star.png",
		     "skin://icons/NoStar.png");
  });
}  


widget(container_y, {
   .alpha = 1 - iir(clamp(getLayer(), 0, 1), 7) * 0.5;
   .blur  = iir(clamp(getLayer(), 0, 1), 7);

  .filterConstraintY = true;
  .filterConstraintX = true;

  .padding = [20, 10, 20, 10];

  widget(container_x, {
    .spacing = 20;
    widget(image, {
      .hqScaling = true;
      .source = $page.model.metadata.icon;
      .height = $ui.height / 2;
      .align = topLeft;
      .aspectConstraint = true;
    });


    widget(container_y, {
      
      .filterConstraintX = true;

      widget(label, {
	.caption = $page.model.metadata.genre;
      });

      widget(container_x, {
	RATINGSTAR(0.1);
	RATINGSTAR(0.3);
	RATINGSTAR(0.5);
	RATINGSTAR(0.7);
	RATINGSTAR(0.9);
      });

      HORIZONTAL_SEPARATOR();

      widget(container_x, {

	widget(container_y, {
	
	  widget(label, {
	    .hidden = select($page.model.metadata.duration, 0, 1);
	    .color = [0.5, 0.5, 0.5];
	    .caption = "Duration:";
	  });


	  widget(label, {
	    .hidden = select($page.model.metadata.director, 0, 1);
	    .color = [0.5, 0.5, 0.5];
	    .caption = "Director:";
	  });

	  widget(label, {
	    .hidden = select($page.model.metadata.actor, 0, 1);
	    .color = [0.5, 0.5, 0.5];
	    .caption = "Actors:";
	  });
	});

	widget(dummy, {
	  .width = 30;
	});

	widget(container_y, {
	  .filterConstraintX = true;
	
	  widget(label, {
	    .hidden = select($page.model.metadata.duration, 0, 1);
	    .caption = value2duration($page.model.metadata.duration);
	  });


	  widget(label, {
	    .hidden = select($page.model.metadata.director, 0, 1);
	    .caption = $page.model.metadata.director;
	  });

	  widget(label, {
	    .hidden = select($page.model.metadata.actor, 0, 1);
	    .maxlines = 2;
	    .caption = $page.model.metadata.actor;
	  });
	});

      });
    });
  });

  widget(dummy, {
    .height = 10;
  });

  widget(label, {
    .sizeScale = 0.9;
    .maxlines = 10;
    .caption = $page.model.metadata.plot;
  });


  widget(backdrop, {
    .border = [5, 5, 5, 5];
    .padding = [0, -3, 0, -3];
      
    .color = [0.5, 0.5, 0.5];
    .source = "theme://graphics/shadedplate.png"

    widget(container_x, {
      .spacing = 20;

      BAR_BUTTON("Watch trailer",
		 navOpen($page.model.metadata.trailerURL),
		 select($page.model.metadata.trailerURL, 0, 1));

      BAR_BUTTON("Rent movie (" + $page.model.metadata.rentalPrice + ")",
		 deliverEvent($page.eventSink, "rent"),
		 !$page.model.metadata.rentable);

      BAR_BUTTON("Play movie",
		 navOpen($page.model.metadata.playURL),
		 select($page.model.metadata.playURL, 0, 1));
    });
  });
});

