#import "theme://include/defs.view"

#define BUTTON(CAPTION, ICON, EVENT, COLOR, SIZE, FONTSCALE, HIDDEN, FOCUSABLE)
{
  widget(backdrop, {
    onEvent(activate, EVENT);
    .focusOnClick = true;

    .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
    .color = COLOR;
    .hidden = HIDDEN;
    PLATE_GFX();

    .width = SIZE;
    .height = SIZE;
    
    .focusable = FOCUSABLE;
    
    widget(container_y, {
      widget(image, {
	.color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
	.source = ICON;
	.shadow = true;
      });
      widget(label, {
	.color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
	.align = center;
	.caption = CAPTION;
	.sizeScale = FONTSCALE;
      });
    });
  });
}


#define BUTTON_SMALL(CAPTION, ICON, EVENT, COLOR, HIDDEN=false, FOCUSABLE=1.0) {
  BUTTON(CAPTION, ICON, EVENT, COLOR, 80, 0.75, HIDDEN, FOCUSABLE);
}

#define BUTTON_BIG(CAPTION, ICON, EVENT, COLOR, HIDDEN=false, FOCUSABLE=1.0) {
  BUTTON(CAPTION, ICON, EVENT, COLOR, 160, 1, HIDDEN, FOCUSABLE);
}



#define BUTTON_TOOLBAR(CAPTION, ICON, EVENT, COLOR) {
  widget(backdrop, {

    onEvent(activate, EVENT);

    .alphaSelf = iir(isFocused() * 0.5, 8) + isHovered() * 0.1;
    .color = COLOR;
      
    .source = "theme://graphics/shadedplate.png";
    .border =  [4, 4, 4, 4];
    .padding = [-4, -4, 0, -4];
   
    .focusable = 1.0;
    
    widget(container_x, {
      widget(icon, {
	.color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
	.source = ICON;
	.sizeScale = 0.75;
	.shadow = true;
      });
      widget(label, {
	.color = select(isFocused(), [1.0, 1.0, 1.0], COLOR);
	.caption = CAPTION;
	.sizeScale = 0.75;
      });
    });
  });

}


#define ICON(ICON, EVENT, COLOR, ENABLED=true, SCALE=1.0, HIDDEN=false, DEBUG=false) {
  widget(backdrop, {
   .hidden = HIDDEN;
     .alpha = select(ENABLED != 0, 1, 0.2);
    .focusable = ENABLED;
    onEvent(activate, EVENT);

    .alphaSelf = iir(isFocused() * 1, 8) * 0.8;
    .color = COLOR;

    PLATE_GFX();

    widget(displacement, {

      .scaling = [1, 1, 1] * iir(select(isPressed(), 0.75, 1.0), 4);

      widget(icon, {
	.color = select(isHovered() || isFocused(), [1.0, 1.0, 1.0], COLOR);
	.shadow = true;
	.source = ICON;
	.sizeScale = SCALE;
      });
    });
  });
}

#define ICON2(ICON, CAPTION, EVENT, COLOR, ENABLED=true, HIDDEN=false, ALWAYSEXPANDED=false) {
  widget(backdrop, {

    .hidden = HIDDEN;
    .alpha = select(ENABLED, 1, 0.2);
    .focusable = ENABLED;
    onEvent(activate, EVENT);

    .alphaSelf = iir(isFocused() * 1 + 0.2, 8) * 0.8;
    .color = COLOR;

    PLATE_GFX();

    widget(displacement, {
      
      .scaling = [1, 1, 1] * iir(select(isPressed(), 0.9, 1.0), 4);
      
    widget(container_x, {
      widget(icon, {
	.color = select(isHovered() || isFocused(), [1.0, 1.0, 1.0], COLOR);
	.shadow = true;
	.source = ICON;
      });

      widget(expander_x, {
	.expansion = scurve(isFocused() || ALWAYSEXPANDED, 0.15);
	.alpha     = scurve(isFocused() || ALWAYSEXPANDED, 0.15);

	widget(label, {
	  .color = select(isHovered() || isFocused(), [1.0, 1.0, 1.0], COLOR);
	  .padding = [3,0,3,0];
	  .caption = CAPTION;
	});
      });
    });
    });
  });
}


#define ONOFF(PROP)
{
  widget(clip, {
    .clipping = 0;
    widget(deck, {
      .effect = flipVertical;
      .noInitialTransform = true;
      .time = 0.2;

      widget(backdrop, {
	.width = KNOB_SIZE();
	.focusable = 1.0;
	
	.alphaSelf = 0.2 + iir(isFocused() * 1, 8) + isHovered() * 0.1;
	
	.color = PLATE_COLOR_OFF();
	PLATE_GFX4();
	
	onEvent(activate, {
	  (PROP) = !PROP;
	});
	
	widget(label, {
	  .align = center;
	  .shadow = true;
	  .caption = _("Off");
	});
      });


      widget(backdrop, {
	.width = KNOB_SIZE();
	.focusable = 1.0;
	
	.alphaSelf = 0.2 + iir(isFocused() * 1, 8) + isHovered() * 0.1;
	.color = PLATE_COLOR_ON();
	
	PLATE_GFX4();
	
	onEvent(activate, {
	  (PROP) = !PROP;
	});
	
	widget(label, {
	  .align = center;
	  .shadow = true;
	  .caption = _("On");
	});
      });      

      // Must be after the widgets
      .page = PROP;
    });
  });
}



#define BAR_BUTTON(CAPTION, EVENT, DISABLED = false, ICON = "")
{
  widget(backdrop, {
    onEvent(activate, EVENT);
    .hidden = DISABLED;
    .border = [10, 10, 10, 10];
    .padding = [0, -5, 0, -5];
    .focusOnClick = true;
    .focusable = select(DISABLED, 0, 1);
    .source = "theme://graphics/glossy.png";
    .color = [0.5, 0.5, 0.5] + 0.35 * (isFocused() + isHovered()) - 0.5 * isPressed();

    widget(container_x, {
      .align = center;

      widget(icon, {
	.hidden = select(icon, 0, 1);
	.source = ICON;
      });

      widget(label, {
	.color = [0.8, 0.8, 0.8] + 1 * (isFocused() + isHovered());
	.caption = CAPTION;
      });
    });
  });
}




#define BASECOLOR() {[0.45, 0.45, 0.45]}
#define SELCOLOR() {[1.0, 1.0, 1.0]}

#define _gloss() {
  widget(backdrop, {
    .additive = true;
    .source = "theme://graphics/bar-gloss.png";
    .border = [2,4,2,4];
    .padding = [5,0,5,0];
    .color = [0.3, 0.3, 0.3];
  });
}

#define _glossybutton(ICON, EVENT, ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(displacement, {
    .hidden = HIDDEN;
    .padding = iir(isPressed() * 2, 3, true);

    widget(container_z, {
      widget(backdrop, {
	.focusable = ENABLED;
	.source = "theme://graphics/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	onEvent(activate, EVENT);
	
	widget(icon, {
	  .alpha = select(ENABLED, 1,  0.2);
	  .source = ICON;
	  .sizeScale = SCALE;
	  .shadow = true;
	  .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	});
      });
      _gloss();
    });
  });
}


#define _glossybuttontoggle(ICON, EVENT, STATE, ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(displacement, {
    .hidden = HIDDEN;
    .padding = iir(isPressed() * 2, 3, true);
    widget(container_z, {
      widget(backdrop, {
	.focusable = ENABLED;
	.source = "theme://graphics/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	onEvent(activate, {
	  (STATE) = !STATE;
	});
      
	widget(icon, {
	  .source = ICON;
	  .sizeScale = SCALE;
	  .shadow = true;
	  .color = select(isHovered() || isFocused(), 0.3, 0.0) + select(STATE, 0.6, 0.0);
	});
      });
      _gloss();
    });
  });
}



#define _glossybuttonTextRight(ICON, CAPTION, EVENT, ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(displacement, {
    .hidden = HIDDEN;
    .padding = iir(isPressed() * 2, 3, true);

    widget(container_z, {
      widget(backdrop, {
	.focusable = ENABLED;
	.source = "theme://graphics/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	onEvent(activate, EVENT);
	
	widget(container_x, {

	  widget(icon, {
	    .alpha = select(ENABLED, 1,  0.2);
	    .source = ICON;
	    .sizeScale = SCALE;
	    .shadow = true;
	    .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	  });
	  widget(label, {
	    .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	    .caption = CAPTION;
	    .sizeScale = SCALE;
	  });
	});
      });
      _gloss();
    });
  });
}






#define _glossybuttonText(ICON, CAPTION, EVENT,
			  ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(container_y, {
    .hidden = HIDDEN;
    .focusable = ENABLED;
    onEvent(activate, EVENT);
	
    widget(container_z, {
      widget(backdrop, {
	
	.source = "theme://graphics/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	widget(icon, {
	  .alpha = select(ENABLED, 1,  0.2);
	  .source = ICON;
	  .sizeScale = SCALE;
	  .shadow = true;
	  .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	});
      });
      _gloss();
    });
    widget(label, {
      .caption = CAPTION;
      .align = center;
      .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
    });
  });
}



#define _glossybuttonTextOnly(CAPTION, EVENT, ENABLED=true, HIDDEN=false, SCALE=1.0) {
  widget(displacement, {
    .hidden = HIDDEN;
    .padding = iir(isPressed() * 2, 3, true);

    widget(container_z, {
      widget(backdrop, {
	.focusable = ENABLED;
	.source = "theme://graphics/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	
	onEvent(activate, EVENT);
	
	widget(label, {
	  .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	  .caption = CAPTION;
	  .sizeScale = SCALE;
	  .align = center;
	});
      });
      _gloss();
    });
  });
}




#define _glossycontainer(BODY) {
  widget(container_z, {
    .filterConstraintX = true;
    widget(backdrop, {
      .source = "theme://graphics/bar4.png";
      .border = [6,4,6,4];
      .color = BASECOLOR();
      BODY
    });
    _gloss();
  });
}

#define _glossycontainer2(BODY) {
  widget(container_z, {
    widget(backdrop, {
      .source = "theme://graphics/bar3.png";
      .border = [2,4,2,4];
      .padding = [5,0,5,0];
      .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
      BODY
    });
    _gloss();
  });
}


#define _glossySelection(ICON, TYPE, EVENT, ENABLED=true, SCALE=1.0) {
  widget(displacement, {
    .hidden = !ENABLED;
    .padding = iir(isPressed() * 2, 3, true);
    widget(container_z, {
      widget(backdrop, {
	.focusable = 0.1;
	onEvent(activate, EVENT);
	
	.color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	.source = "theme://graphics/bar3.png";
	.border = [2,4,2,4];
	.padding = [5,0,5,0];
	
	
	widget(container_z, {
	  widget(icon, {
	    .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	    .shadow = true;
	    .source = ICON;
	    .sizeScale = SCALE;
	  });
	  
	  widget(icon, {
	    .alpha = iir($page.glw.curView == TYPE, 4);
	    .color = select(isHovered() || isFocused(), SELCOLOR(), BASECOLOR());
	    .shadow = true;
	    .source = "theme://svg/Selected.svg";
	    .sizeScale = SCALE;
	  });
	});
      });
      _gloss();
    });
  });
}
